definitions:
  errors.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  models.Item:
    properties:
      description:
        type: string
      id:
        type: integer
      initialPrice:
        minimum: 0
        type: number
      soldPrice:
        type: number
      title:
        type: string
      userId:
        type: integer
    required:
    - title
    type: object
  models.User:
    properties:
      email:
        minLength: 1
        type: string
      firstName:
        minLength: 1
        type: string
      id:
        type: integer
      lastLoginUtc:
        type: string
      lastName:
        minLength: 1
        type: string
      password:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  routes.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /items/:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all available items.
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get Items List
      tags:
      - Items
    post:
      consumes:
      - application/json
      description: Creates a new item based on the provided request body.
      parameters:
      - description: Item details
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "201":
          description: Item created successfully
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: 'Bad Request: Failed to parse request body or validation failed'
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Create Item
      tags:
      - Items
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an item by its ID.
      parameters:
      - description: ID of the item to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Item deleted successfully
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Delete Item
      tags:
      - Items
    get:
      consumes:
      - application/json
      description: Retrieves the details of an item by its ID.
      parameters:
      - description: ID of the item to retrieve
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item retrieved successfully
          schema:
            $ref: '#/definitions/models.Item'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get Item
      tags:
      - Items
    put:
      consumes:
      - application/json
      description: Updates the details of an item based on the provided request body
        and item ID.
      parameters:
      - description: ID of the item to update
        in: path
        name: id
        required: true
        type: integer
      - description: Updated item details
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: Item updated successfully
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: 'Bad Request: Failed to parse request body or validation failed'
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Update Item
      tags:
      - Items
  /users/:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all available users.
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get Users List
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a new user based on the provided request body.
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 'Bad Request: Failed to parse request body or validation failed'
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Create User
      tags:
      - Users
  /users/login/:
    post:
      consumes:
      - application/json
      description: Logs in a user based on the provided credentials.
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/routes.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: JWT
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Login User
      tags:
      - Users
swagger: "2.0"
